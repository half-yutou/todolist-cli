name: Build and Release

# 触发条件：当推送标签时
on:
  push:
    tags:
      - 'v*.*.*'  # 例如 v1.0.0
  # 也可以手动触发
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # CLI 版本
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: todolist-cli
            artifact_name: todolist-cli
            asset_name: todolist-cli-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: todolist-cli
            artifact_name: todolist-cli.exe
            asset_name: todolist-cli-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            bin: todolist-cli
            artifact_name: todolist-cli
            asset_name: todolist-cli-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: todolist-cli
            artifact_name: todolist-cli
            asset_name: todolist-cli-macos-arm64
          # GUI 版本
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: todolist-gui
            artifact_name: todolist-gui
            asset_name: todolist-gui-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: todolist-gui
            artifact_name: todolist-gui.exe
            asset_name: todolist-gui-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            bin: todolist-gui
            artifact_name: todolist-gui
            asset_name: todolist-gui-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: todolist-gui
            artifact_name: todolist-gui
            asset_name: todolist-gui-macos-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    # 为Linux GUI版本安装依赖
    - name: Install GUI dependencies (Linux)
      if: matrix.os == 'ubuntu-latest' && matrix.bin == 'todolist-gui'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev

    # 构建指定的二进制文件
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }} --bin ${{ matrix.bin }}

    - name: Prepare artifact
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
        else
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          chmod +x ${{ matrix.asset_name }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    # 确保只有在推送标签时才创建发布
    if: startsWith(github.ref, 'refs/tags/')
    
    # 添加权限配置
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}